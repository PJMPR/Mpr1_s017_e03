package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import domain.model.Person;

public class PersonRepository extends RepositoryBase<Person> {
	
	public PersonRepository(Connection connection) {
		super(connection);
	}

	public Person get(int personId){
		try{
			
			selectById.setInt(1, personId);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()){
				Person result = new Person();
				result.setId(personId);
				result.setName(rs.getString("name"));
				result.setSurname(rs.getString("surname"));
				return result;
			}
		}
		catch(SQLException ex){
			ex.printStackTrace();
		}
		return null;
	}

	public List<Person> getAll(){
		try{
			List<Person> result = new ArrayList<Person>();
			ResultSet rs = selectAll.executeQuery();
			while(rs.next()){
				Person p = new Person();
				p.setId(rs.getInt("id"));
				p.setName(rs.getString("name"));
				p.setSurname(rs.getString("surname"));
				result.add(p);
			}
			return result;
		}
		catch(SQLException ex){
			ex.printStackTrace();
		}
		return null;
	}
	
	@Override
	protected String tableName() {
		return "person";
	}

	@Override
	protected String createTableSql() {
		return "CREATE TABLE person("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "name VARCHAR(20),"
				+ "surname VARCHAR(50)"
				+ ")";
	}

	@Override
	protected String insertSql() {
		return "INSERT INTO person(name,surname) VALUES(?,?)";
	}

	@Override
	protected String deleteSql() {
		return "DELETE FROM Person WHERE id = ?";
	}

	@Override
	protected String updateSql() {
		return "UPDATE PERSON set name=?, surname=? WHERE id=?";
	}

	@Override
	protected String selectByIdSql() {
		return "SELECT * FROM person WHERE id=?";
	}

	@Override
	protected String selectAllSql() {
		return "SELECT * FROM person";
	}

	@Override
	protected void setupInsert(Person entity) throws SQLException {
		insert.setString(1, entity.getName());
		insert.setString(2, entity.getSurname());
		
	}

	@Override
	protected void setupUpdate(Person entity) throws SQLException {
		update.setString(1, entity.getName());
		update.setString(2, entity.getSurname());
		update.setInt(3, entity.getId());
		
	}
	
	
	
	
	
	
	
	
	
	
}
