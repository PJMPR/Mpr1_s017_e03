package dao;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import dao.mappers.IMapResultSetIntoEntity;
import dao.uow.IUnitOfWork;
import domain.model.EnumDictionary;

public  class EnumDictionaryRepository extends RepositoryBase<EnumDictionary>
	implements IEnumRepository{

	
	
	public EnumDictionaryRepository(Connection connection, 
			IMapResultSetIntoEntity<EnumDictionary> mapper,
			IUnitOfWork uow) {
		super(connection, mapper, uow);
	}
	
	

	@Override
	protected String tableName() {
		return "enumDictionary";
	}

	@Override
	protected String createTableSql() {
		return "CREATE TABLE enumDictionary("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "intKey INT,"
				+ "stringKey VARCHAR(50),"
				+ "value VARCHAR(50),"
				+ "enumName VARCHAR(50),"
				+ ")";
	}

	@Override
	protected String insertSql() {
		return "INSERT INTO enumDictionary(intKey,stringKey,value,enumName) VALUES(?,?,?,?)";
	}


	@Override
	protected String updateSql() {
		return "UPDATE enumDictionary set intKey=?,stringKey=?,value=?,enumName=? WHERE id = ?";
	}



	@Override
	protected void setupInsert(EnumDictionary entity) throws SQLException {
		insert.setLong(1,  entity.getIntKey());
		insert.setString(2,  entity.getStringKey());
		insert.setString(3, entity.getValue());
		insert.setString(4, entity.getEnumName());		
	}

	@Override
	protected void setupUpdate(EnumDictionary entity) throws SQLException {
		update.setLong(1, entity.getIntKey());
		update.setString(2,  entity.getStringKey());
		update.setString(3, entity.getValue());
		update.setString(4, entity.getEnumName());		
	}



	public List<EnumDictionary> byEnumerationName(String name) {
		// TODO Auto-generated method stub
		return null;
	}


}
	

