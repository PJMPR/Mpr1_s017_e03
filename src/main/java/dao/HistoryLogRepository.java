package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import domain.model.HistoryLog;
import domain.model.Person;

public class HistoryLogRepository extends RepositoryBase {
	
	public HistoryLogRepository(Connection connection) {
		super(connection);
	}
	
	public HistoryLog get(int historyLogId){
		try{
			
			selectById.setInt(1, historyLogId);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()){
				HistoryLog result = new HistoryLog();
				result.setId(historyLogId);
				result.setAmount(rs.getDouble("amount"));
				return result;
			}
		}
		catch(SQLException ex){
			ex.printStackTrace();
		}
		return null;
	}
	
	public List<HistoryLog> getAll(){
		try{
			List<HistoryLog> result = new ArrayList<HistoryLog>();
			ResultSet rs = selectAll.executeQuery();
			while(rs.next()){
				HistoryLog h = new HistoryLog();
				//h.setId(rs.getInt("id"));
				//h.setName(rs.getString("name"));
				//h.setSurname(rs.getString("surname"));
				result.add(h);
			}
			return result;
		}
		catch(SQLException ex){
			ex.printStackTrace();
		}
		return null;
	}
	
	public void delete(HistoryLog p){
		try{
			delete.setInt(1, p.getId());
			delete.executeUpdate();
		}catch(SQLException ex){
			ex.printStackTrace();
		}
	}
	
	public void add(HistoryLog p){
		try{
			
			insert.setString(1, p.getDate().toString());
			insert.setDouble(2, p.getAmount());
			insert.setInt(3, p.getFrom().getId());
			insert.setInt(4, p.getTo().getId());
			insert.setDouble(5, p.getRate());
			insert.setInt(6, p.getType().ordinal());
			insert.executeUpdate();
			
		}catch(SQLException ex){
			ex.printStackTrace();
		}
		
	}
	
	public void update(HistoryLog p){
		try{
			
			update.setString(1, p.getDate().toString());
			update.setDouble(2, p.getAmount());
			update.setInt(3, p.getFrom().getId());
			update.setInt(4, p.getTo().getId());
			update.setDouble(5, p.getRate());
			update.setInt(6, p.getType().ordinal());
			update.executeUpdate();
			
		}catch(SQLException ex){
			ex.printStackTrace();
		}
		
	}
	
	@Override
	protected String tableName() {
		// TODO Auto-generated method stub
		return "historyLog";
	}

	@Override
	protected String createTableSql() {
		return "CREATE TABLE historyLog("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "date DATE,"
				+ "amount DECIMAL(7,2),"
				+ "accountfrom BIGINT,"
				+ "accountto BIGINT,"
				+ "rate DECIMAL(7,2),"
				+ "operation BIGINT"
				+ ")";
	}

	@Override
	protected String insertSql() {
		return "INSERT INTO historyLog(date,amount,accountfrom,accountto,rate,operation) VALUES(?,?,?,?,?,?)";
	}

	@Override
	protected String deleteSql() {
		return "DELETE FROM historyLog WHERE id = ?";
	}

	@Override
	protected String updateSql() {
		return "UPDATE historyLog set date=?, amount=?, accountfrom=?, accountto=?, rate=?, operation=? WHERE id=?";
	}

	@Override
	protected String selectByIdSql() {
		return "SELECT * FROM historyLog WHERE id=?";
	}

	@Override
	protected String selectAllSql() {
		return "SELECT * FROM historyLog";
	}
	
}
